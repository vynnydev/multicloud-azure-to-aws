services:
  db:
    environment:
      - MYSQL_DATABASE=ecommerce_dev
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "3307:3306"  # mantido ou alterado se houver conflito local

  produtos-service:
    build:
      context: ./produtos-service
      dockerfile: Dockerfile.dev  # caso tenha um Dockerfile com ferramentas de dev
    environment:
      - APP_ENV=dev
      - FLASK_ENV=development  # ativa modo debug no Flask
    volumes:
      - ./clientes-service:/app  # hot reload com c贸digo local
    ports:
      - "8080:8080"

  categorias-service:
    build:
      context: ./categorias-service
      dockerfile: Dockerfile.dev  # caso tenha um Dockerfile com ferramentas de dev
    environment:
      - APP_ENV=dev
      - FLASK_ENV=development  # ativa modo debug no Flask
    volumes:
      - ./categorias-service:/app  # hot reload com c贸digo local
    ports:
      - "8081:8081"

  fornecedores-service:
    build:
      context: ./fornecedores-service
      dockerfile: Dockerfile.dev  # caso tenha um Dockerfile com ferramentas de dev
    environment:
      - APP_ENV=dev
      - FLASK_ENV=development  # ativa modo debug no Flask
    volumes:
      - ./fornecedores-service:/app  # hot reload com c贸digo local
    ports:
      - "8082:8082"

  avaliacoes-service:
    build:
      context: ./avaliacoes-service
      dockerfile: Dockerfile.dev  # caso tenha um Dockerfile com ferramentas de dev
    environment:
      - APP_ENV=dev
      - FLASK_ENV=development  # ativa modo debug no Flask
    volumes:
      - ./avaliacoes-service:/app  # hot reload com c贸digo local
    ports:
      - "8083:8083"
