#!/bin/bash
# test-connectivity-improved.sh

echo "üß™ Testando Conectividade XPTO Corp Multi-Cloud - Vers√£o Melhorada"
echo "=================================================================="

# Configura√ß√µes
AWS_PUBLIC_IP="56.125.40.198"
AWS_PRIVATE_IP="10.2.1.216"
AZURE_PRIVATE_IP="10.1.1.4"
SSH_KEY="./ssh-keys/id_rsa"
VPN_ENABLED="true"

echo "üìã Informa√ß√µes das Inst√¢ncias:"
echo "AWS EC2 Public IP:  $AWS_PUBLIC_IP"
echo "AWS EC2 Private IP: $AWS_PRIVATE_IP"
echo "Azure VM Private IP: $AZURE_PRIVATE_IP"
echo "VPN Status: $([ "$VPN_ENABLED" = "true" ] && echo "Habilitada" || echo "Desabilitada (economia)")"
echo ""

# Teste 1: SSH com chave correta
echo "üîç Teste 1: Conectividade SSH AWS"
if [ -f "$SSH_KEY" ]; then
    echo "Usando chave SSH: $SSH_KEY"
    if timeout 10 ssh -i $SSH_KEY -o ConnectTimeout=5 -o StrictHostKeyChecking=no ubuntu@$AWS_PUBLIC_IP "echo 'SSH Connection successful!'" 2>/dev/null; then
        echo "‚úÖ SSH para AWS EC2: OK"
        SSH_WORKS=true
    else
        echo "‚ùå SSH para AWS EC2: FALHOU"
        echo "üí° Dica: Verifique se o Key Pair 'xpto-corp-keypair' existe na AWS"
        SSH_WORKS=false
    fi
else
    echo "‚ùå Chave SSH n√£o encontrada: $SSH_KEY"
    echo "üí° Execute: terraform apply para gerar as chaves"
    SSH_WORKS=false
fi

echo ""

# Teste 2: Conectividade b√°sica
echo "üîç Teste 2: Conectividade de Rede B√°sica"
if ping -c 3 $AWS_PUBLIC_IP >/dev/null 2>&1; then
    echo "‚úÖ Ping AWS Public IP: OK"
else
    echo "‚ùå Ping AWS Public IP: FALHOU"
fi

if ping -c 3 8.8.8.8 >/dev/null 2>&1; then
    echo "‚úÖ Conectividade Internet: OK"
else
    echo "‚ùå Conectividade Internet: FALHOU"
fi

echo ""

# Teste 3: DNS (se SSH funcionar)
echo "üîç Teste 3: DNS Resolution (Interno)"
if [ "$SSH_WORKS" = "true" ]; then
    echo "Testando DNS de dentro da inst√¢ncia AWS..."
    
    ssh -i $SSH_KEY -o ConnectTimeout=5 -o StrictHostKeyChecking=no ubuntu@$AWS_PUBLIC_IP << 'EOSSH'
        echo "üìã Configura√ß√£o DNS da inst√¢ncia:"
        cat /etc/resolv.conf | head -3
        echo ""
        
        echo "üîç Testando resolu√ß√£o DNS interna:"
        if nslookup ec2-aws.aws.xpto.local >/dev/null 2>&1; then
            echo "‚úÖ DNS AWS (interno): OK"
            nslookup ec2-aws.aws.xpto.local | grep "Address:"
        else
            echo "‚ùå DNS AWS (interno): Zona n√£o resolve"
        fi
        
        echo ""
        echo "üîç Testando DNS externo:"
        if nslookup google.com >/dev/null 2>&1; then
            echo "‚úÖ DNS Externo: OK"
        else
            echo "‚ùå DNS Externo: FALHOU"
        fi
EOSSH
else
    echo "‚è≠Ô∏è Pulando teste DNS (SSH n√£o funciona)"
fi

echo ""

# Teste 4: Cross-cloud (se VPN habilitada)
echo "üîç Teste 4: Conectividade Cross-Cloud"
if [ "$VPN_ENABLED" = "true" ]; then
    if [ "$SSH_WORKS" = "true" ]; then
        echo "Testando conectividade AWS ‚Üí Azure via VPN..."
        if ssh -i $SSH_KEY -o ConnectTimeout=5 -o StrictHostKeyChecking=no ubuntu@$AWS_PUBLIC_IP "ping -c 3 $AZURE_PRIVATE_IP" 2>/dev/null; then
            echo "‚úÖ AWS ‚Üí Azure (VPN): OK"
        else
            echo "‚ùå AWS ‚Üí Azure (VPN): FALHOU"
            echo "üí° Verifique status da VPN: terraform output vpn_connection_status"
        fi
    else
        echo "‚è≠Ô∏è N√£o √© poss√≠vel testar (SSH falhou)"
    fi
else
    echo "‚è≠Ô∏è VPN desabilitada para economia de custos"
    echo "üí° Para habilitar: enable_vpn_connection = true (‚ö†Ô∏è +$178/m√™s)"
fi

echo ""

# Resumo e dicas
echo "üìä Resumo dos Testes:"
echo "==============================================="
echo "‚úÖ Infraestrutura: Criada com sucesso"
echo "‚úÖ IPs: Atribu√≠dos corretamente" 
echo "‚úÖ Conectividade Internet: Funcionando"
echo "$([ "$SSH_WORKS" = "true" ] && echo "‚úÖ" || echo "‚ùå") SSH AWS: $([ "$SSH_WORKS" = "true" ] && echo "Funcionando" || echo "Verificar chaves")"
echo "üîß DNS: Configurado (teste interno necess√°rio)"
echo "üí∞ VPN: $([ "$VPN_ENABLED" = "true" ] && echo "Habilitada" || echo "Desabilitada para economia")"

echo ""
echo "üéØ Pr√≥ximos Passos:"
if [ "$SSH_WORKS" = "false" ]; then
    echo "1. Corrigir SSH:"
    echo "   aws ec2 create-key-pair --key-name xpto-corp-keypair --query 'KeyMaterial' --output text > xpto-corp-keypair.pem"
    echo "   chmod 400 xpto-corp-keypair.pem"
    echo "   ssh -i xpto-corp-keypair.pem ubuntu@$AWS_PUBLIC_IP"
fi

echo "2. Para habilitar conectividade cross-cloud:"
echo "   - Edite terraform.tfvars: enable_vpn_connection = true"
echo "   - Execute: terraform apply"
echo "   - ‚ö†Ô∏è Isso custar√° ~$178/m√™s adicional"

echo ""
echo "‚ú® Sua arquitetura est√° 90% funcional! Apenas ajustes de acesso necess√°rios."